
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.dbm.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.common.ForgeSpawnEggItem;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.BlockItem;

import net.mcreator.dbm.item.TurtleGiKingKaiItem;
import net.mcreator.dbm.item.TurtleGiItem;
import net.mcreator.dbm.item.SenzuBeanItem;
import net.mcreator.dbm.item.RawDinosaurItem;
import net.mcreator.dbm.item.PurpleGiItem;
import net.mcreator.dbm.item.PunchingBagItemItem;
import net.mcreator.dbm.item.PowerPoleItem;
import net.mcreator.dbm.item.OldSchoolTurtleGiItem;
import net.mcreator.dbm.item.KamehamehaItemItem;
import net.mcreator.dbm.item.DragonRadarItem;
import net.mcreator.dbm.item.CookedDinosaurItem;
import net.mcreator.dbm.item.BattleArmorItem;
import net.mcreator.dbm.DbmMod;

public class DbmModItems {
	public static final DeferredRegister<Item> REGISTRY = DeferredRegister.create(ForgeRegistries.ITEMS, DbmMod.MODID);
	public static final RegistryObject<Item> KORIN_TOWER_BASE = block(DbmModBlocks.KORIN_TOWER_BASE);
	public static final RegistryObject<Item> SENZU_BEAN = REGISTRY.register("senzu_bean", () -> new SenzuBeanItem());
	public static final RegistryObject<Item> HORIZONTAL_LADDER_SUPPORT = block(DbmModBlocks.HORIZONTAL_LADDER_SUPPORT);
	public static final RegistryObject<Item> HORIZONTAL_LADDER = block(DbmModBlocks.HORIZONTAL_LADDER);
	public static final RegistryObject<Item> DIAGONAL_LADDER = block(DbmModBlocks.DIAGONAL_LADDER);
	public static final RegistryObject<Item> VERTICAL_LADDER = block(DbmModBlocks.VERTICAL_LADDER);
	public static final RegistryObject<Item> VERTICAL_LADDER_SUPPORT = block(DbmModBlocks.VERTICAL_LADDER_SUPPORT);
	public static final RegistryObject<Item> KAMEHAMEHA_ITEM = REGISTRY.register("kamehameha_item", () -> new KamehamehaItemItem());
	public static final RegistryObject<Item> TURTLE_GI_KING_KAI_CHESTPLATE = REGISTRY.register("turtle_gi_king_kai_chestplate", () -> new TurtleGiKingKaiItem.Chestplate());
	public static final RegistryObject<Item> TURTLE_GI_KING_KAI_LEGGINGS = REGISTRY.register("turtle_gi_king_kai_leggings", () -> new TurtleGiKingKaiItem.Leggings());
	public static final RegistryObject<Item> BATTLE_ARMOR_CHESTPLATE = REGISTRY.register("battle_armor_chestplate", () -> new BattleArmorItem.Chestplate());
	public static final RegistryObject<Item> BATTLE_ARMOR_LEGGINGS = REGISTRY.register("battle_armor_leggings", () -> new BattleArmorItem.Leggings());
	public static final RegistryObject<Item> UNBREAKABLE_GRASS_BLOCK = block(DbmModBlocks.UNBREAKABLE_GRASS_BLOCK);
	public static final RegistryObject<Item> UNBREAKABLE_DIRT = block(DbmModBlocks.UNBREAKABLE_DIRT);
	public static final RegistryObject<Item> BUILDING_BLOCK_WHITE = block(DbmModBlocks.BUILDING_BLOCK_WHITE);
	public static final RegistryObject<Item> BUILDING_BLOCK_LIGHT_GRAY = block(DbmModBlocks.BUILDING_BLOCK_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_BLOCK_GRAY = block(DbmModBlocks.BUILDING_BLOCK_GRAY);
	public static final RegistryObject<Item> BUILDING_BLOCK_DARK_GRAY = block(DbmModBlocks.BUILDING_BLOCK_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_BLOCK_BLACK = block(DbmModBlocks.BUILDING_BLOCK_BLACK);
	public static final RegistryObject<Item> BUILDING_BLOCK_BROWN = block(DbmModBlocks.BUILDING_BLOCK_BROWN);
	public static final RegistryObject<Item> BUILDING_BLOCK_BLUE = block(DbmModBlocks.BUILDING_BLOCK_BLUE);
	public static final RegistryObject<Item> BUILDING_BLOCK_CYAN = block(DbmModBlocks.BUILDING_BLOCK_CYAN);
	public static final RegistryObject<Item> BUILDING_BLOCK_SKY_BLUE = block(DbmModBlocks.BUILDING_BLOCK_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_BLOCK_DARK_GREEN = block(DbmModBlocks.BUILDING_BLOCK_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_BLOCK_GREEN = block(DbmModBlocks.BUILDING_BLOCK_GREEN);
	public static final RegistryObject<Item> BUILDING_BLOCK_LIME = block(DbmModBlocks.BUILDING_BLOCK_LIME);
	public static final RegistryObject<Item> BUILDING_BLOCK_YELLOW = block(DbmModBlocks.BUILDING_BLOCK_YELLOW);
	public static final RegistryObject<Item> BUILDING_BLOCK_ORANGE = block(DbmModBlocks.BUILDING_BLOCK_ORANGE);
	public static final RegistryObject<Item> BUILDING_BLOCK_RED = block(DbmModBlocks.BUILDING_BLOCK_RED);
	public static final RegistryObject<Item> BUILDING_BLOCK_PURPLE = block(DbmModBlocks.BUILDING_BLOCK_PURPLE);
	public static final RegistryObject<Item> BUILDING_BLOCK_PINK = block(DbmModBlocks.BUILDING_BLOCK_PINK);
	public static final RegistryObject<Item> BUILDING_BLOCK_TILES = block(DbmModBlocks.BUILDING_BLOCK_TILES);
	public static final RegistryObject<Item> BUILDING_BRICKS_WHITE = block(DbmModBlocks.BUILDING_BRICKS_WHITE);
	public static final RegistryObject<Item> BUILDING_BRICKS_LIGHT_GRAY = block(DbmModBlocks.BUILDING_BRICKS_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_GRAY = block(DbmModBlocks.BUILDING_BRICKS_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_DARK_GRAY = block(DbmModBlocks.BUILDING_BRICKS_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_BLACK = block(DbmModBlocks.BUILDING_BRICKS_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_BROWN = block(DbmModBlocks.BUILDING_BRICKS_BROWN);
	public static final RegistryObject<Item> BUILDING_BRICKS_BLUE = block(DbmModBlocks.BUILDING_BRICKS_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_CYAN = block(DbmModBlocks.BUILDING_BRICKS_CYAN);
	public static final RegistryObject<Item> BUILDING_BRICKS_SKY_BLUE = block(DbmModBlocks.BUILDING_BRICKS_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_DARK_GREEN = block(DbmModBlocks.BUILDING_BRICKS_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_GREEN = block(DbmModBlocks.BUILDING_BRICKS_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_LIME = block(DbmModBlocks.BUILDING_BRICKS_LIME);
	public static final RegistryObject<Item> BUILDING_BRICKS_YELLOW = block(DbmModBlocks.BUILDING_BRICKS_YELLOW);
	public static final RegistryObject<Item> BUILDING_BRICKS_ORANGE = block(DbmModBlocks.BUILDING_BRICKS_ORANGE);
	public static final RegistryObject<Item> BUILDING_BRICKS_RED = block(DbmModBlocks.BUILDING_BRICKS_RED);
	public static final RegistryObject<Item> BUILDING_BRICKS_PURPLE = block(DbmModBlocks.BUILDING_BRICKS_PURPLE);
	public static final RegistryObject<Item> BUILDING_BRICKS_PINK = block(DbmModBlocks.BUILDING_BRICKS_PINK);
	public static final RegistryObject<Item> BUILDING_BLOCK_INVERTED_BLACK = block(DbmModBlocks.BUILDING_BLOCK_INVERTED_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_INVERTED_BLACK = block(DbmModBlocks.BUILDING_BRICKS_INVERTED_BLACK);
	public static final RegistryObject<Item> BUILDING_SLAB_WHITE = block(DbmModBlocks.BUILDING_SLAB_WHITE);
	public static final RegistryObject<Item> BUILDING_SLAB_LIGHT_GRAY = block(DbmModBlocks.BUILDING_SLAB_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_SLAB_GRAY = block(DbmModBlocks.BUILDING_SLAB_GRAY);
	public static final RegistryObject<Item> BUILDING_SLAB_DARK_GRAY = block(DbmModBlocks.BUILDING_SLAB_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_SLAB_BLACK = block(DbmModBlocks.BUILDING_SLAB_BLACK);
	public static final RegistryObject<Item> BUILDING_SLAB_BROWN = block(DbmModBlocks.BUILDING_SLAB_BROWN);
	public static final RegistryObject<Item> BUILDING_SLAB_BLUE = block(DbmModBlocks.BUILDING_SLAB_BLUE);
	public static final RegistryObject<Item> BUILDING_SLAB_CYAN = block(DbmModBlocks.BUILDING_SLAB_CYAN);
	public static final RegistryObject<Item> BUILDING_SLAB_SKY_BLUE = block(DbmModBlocks.BUILDING_SLAB_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_SLAB_DARK_GREEN = block(DbmModBlocks.BUILDING_SLAB_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_SLAB_GREEN = block(DbmModBlocks.BUILDING_SLAB_GREEN);
	public static final RegistryObject<Item> BUILDING_SLAB_LIME = block(DbmModBlocks.BUILDING_SLAB_LIME);
	public static final RegistryObject<Item> BUILDING_SLAB_YELLOW = block(DbmModBlocks.BUILDING_SLAB_YELLOW);
	public static final RegistryObject<Item> BUILDING_SLAB_ORANGE = block(DbmModBlocks.BUILDING_SLAB_ORANGE);
	public static final RegistryObject<Item> BUILDING_SLAB_RED = block(DbmModBlocks.BUILDING_SLAB_RED);
	public static final RegistryObject<Item> BUILDING_SLAB_PURPLE = block(DbmModBlocks.BUILDING_SLAB_PURPLE);
	public static final RegistryObject<Item> BUILDING_SLAB_PINK = block(DbmModBlocks.BUILDING_SLAB_PINK);
	public static final RegistryObject<Item> DRAGON_RADAR = REGISTRY.register("dragon_radar", () -> new DragonRadarItem());
	public static final RegistryObject<Item> POWER_POLE = REGISTRY.register("power_pole", () -> new PowerPoleItem());
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_WHITE = block(DbmModBlocks.BUILDING_BRICKS_SLAB_WHITE);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_LIGHT_GRAY = block(DbmModBlocks.BUILDING_BRICKS_SLAB_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_GRAY = block(DbmModBlocks.BUILDING_BRICKS_SLAB_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_DARK_GRAY = block(DbmModBlocks.BUILDING_BRICKS_SLAB_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_BLACK = block(DbmModBlocks.BUILDING_BRICKS_SLAB_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_BROWN = block(DbmModBlocks.BUILDING_BRICKS_SLAB_BROWN);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_BLUE = block(DbmModBlocks.BUILDING_BRICKS_SLAB_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_CYAN = block(DbmModBlocks.BUILDING_BRICKS_SLAB_CYAN);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_SKY_BLUE = block(DbmModBlocks.BUILDING_BRICKS_SLAB_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_DARK_GREEN = block(DbmModBlocks.BUILDING_BRICKS_SLAB_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_GREEN = block(DbmModBlocks.BUILDING_BRICKS_SLAB_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_LIME = block(DbmModBlocks.BUILDING_BRICKS_SLAB_LIME);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_YELLOW = block(DbmModBlocks.BUILDING_BRICKS_SLAB_YELLOW);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_ORANGE = block(DbmModBlocks.BUILDING_BRICKS_SLAB_ORANGE);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_RED = block(DbmModBlocks.BUILDING_BRICKS_SLAB_RED);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_PURPLE = block(DbmModBlocks.BUILDING_BRICKS_SLAB_PURPLE);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_PINK = block(DbmModBlocks.BUILDING_BRICKS_SLAB_PINK);
	public static final RegistryObject<Item> BUILDING_SLAB_INVERTED_BLACK = block(DbmModBlocks.BUILDING_SLAB_INVERTED_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_SLAB_INVERTED_BLACK = block(DbmModBlocks.BUILDING_BRICKS_SLAB_INVERTED_BLACK);
	public static final RegistryObject<Item> BUILDING_STAIRS_WHITE = block(DbmModBlocks.BUILDING_STAIRS_WHITE);
	public static final RegistryObject<Item> BUILDING_STAIRS_LIGHT_GRAY = block(DbmModBlocks.BUILDING_STAIRS_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_STAIRS_GRAY = block(DbmModBlocks.BUILDING_STAIRS_GRAY);
	public static final RegistryObject<Item> BUILDING_STAIRS_DARK_GRAY = block(DbmModBlocks.BUILDING_STAIRS_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_STAIRS_BLACK = block(DbmModBlocks.BUILDING_STAIRS_BLACK);
	public static final RegistryObject<Item> BUILDING_STAIRS_BROWN = block(DbmModBlocks.BUILDING_STAIRS_BROWN);
	public static final RegistryObject<Item> BUILDING_STAIRS_BLUE = block(DbmModBlocks.BUILDING_STAIRS_BLUE);
	public static final RegistryObject<Item> BUILDING_STAIRS_CYAN = block(DbmModBlocks.BUILDING_STAIRS_CYAN);
	public static final RegistryObject<Item> BUILDING_STAIRS_SKY_BLUE = block(DbmModBlocks.BUILDING_STAIRS_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_STAIRS_DARK_GREEN = block(DbmModBlocks.BUILDING_STAIRS_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_STAIRS_GREEN = block(DbmModBlocks.BUILDING_STAIRS_GREEN);
	public static final RegistryObject<Item> BUILDING_STAIRS_LIME = block(DbmModBlocks.BUILDING_STAIRS_LIME);
	public static final RegistryObject<Item> BUILDING_STAIRS_YELLOW = block(DbmModBlocks.BUILDING_STAIRS_YELLOW);
	public static final RegistryObject<Item> BUILDING_STAIRS_ORANGE = block(DbmModBlocks.BUILDING_STAIRS_ORANGE);
	public static final RegistryObject<Item> BUILDING_STAIRS_RED = block(DbmModBlocks.BUILDING_STAIRS_RED);
	public static final RegistryObject<Item> BUILDING_STAIRS_PURPLE = block(DbmModBlocks.BUILDING_STAIRS_PURPLE);
	public static final RegistryObject<Item> BUILDING_STAIRS_PINK = block(DbmModBlocks.BUILDING_STAIRS_PINK);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_WHITE = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_WHITE);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_LIGHT_GRAY = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_GRAY = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_DARK_GRAY = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_BLACK = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_BROWN = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_BROWN);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_BLUE = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_CYAN = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_CYAN);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_SKY_BLUE = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_DARK_GREEN = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_GREEN = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_LIME = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_LIME);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_YELLOW = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_YELLOW);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_ORANGE = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_ORANGE);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_RED = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_RED);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_PURPLE = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_PURPLE);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_PINK = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_PINK);
	public static final RegistryObject<Item> BUILDING_FENCE_WHITE = block(DbmModBlocks.BUILDING_FENCE_WHITE);
	public static final RegistryObject<Item> BUILDING_FENCE_LIGHT_GRAY = block(DbmModBlocks.BUILDING_FENCE_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_FENCE_GRAY = block(DbmModBlocks.BUILDING_FENCE_GRAY);
	public static final RegistryObject<Item> BUILDING_FENCE_DARK_GRAY = block(DbmModBlocks.BUILDING_FENCE_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_FENCE_BLACK = block(DbmModBlocks.BUILDING_FENCE_BLACK);
	public static final RegistryObject<Item> BUILDING_FENCE_BROWN = block(DbmModBlocks.BUILDING_FENCE_BROWN);
	public static final RegistryObject<Item> BUILDING_FENCE_BLUE = block(DbmModBlocks.BUILDING_FENCE_BLUE);
	public static final RegistryObject<Item> BUILDING_FENCE_CYAN = block(DbmModBlocks.BUILDING_FENCE_CYAN);
	public static final RegistryObject<Item> BUILDING_FENCE_SKY_BLUE = block(DbmModBlocks.BUILDING_FENCE_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_FENCE_DARK_GREEN = block(DbmModBlocks.BUILDING_FENCE_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_FENCE_GREEN = block(DbmModBlocks.BUILDING_FENCE_GREEN);
	public static final RegistryObject<Item> BUILDING_FENCE_LIME = block(DbmModBlocks.BUILDING_FENCE_LIME);
	public static final RegistryObject<Item> BUILDING_FENCE_YELLOW = block(DbmModBlocks.BUILDING_FENCE_YELLOW);
	public static final RegistryObject<Item> BUILDING_FENCE_ORANGE = block(DbmModBlocks.BUILDING_FENCE_ORANGE);
	public static final RegistryObject<Item> BUILDING_FENCE_RED = block(DbmModBlocks.BUILDING_FENCE_RED);
	public static final RegistryObject<Item> BUILDING_FENCE_PURPLE = block(DbmModBlocks.BUILDING_FENCE_PURPLE);
	public static final RegistryObject<Item> BUILDING_FENCE_PINK = block(DbmModBlocks.BUILDING_FENCE_PINK);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_WHITE = block(DbmModBlocks.BUILDING_BRICKS_FENCE_WHITE);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_LIGHT_GRAY = block(DbmModBlocks.BUILDING_BRICKS_FENCE_LIGHT_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_GRAY = block(DbmModBlocks.BUILDING_BRICKS_FENCE_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_DARK_GRAY = block(DbmModBlocks.BUILDING_BRICKS_FENCE_DARK_GRAY);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_BLACK = block(DbmModBlocks.BUILDING_BRICKS_FENCE_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_BROWN = block(DbmModBlocks.BUILDING_BRICKS_FENCE_BROWN);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_BLUE = block(DbmModBlocks.BUILDING_BRICKS_FENCE_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_CYAN = block(DbmModBlocks.BUILDING_BRICKS_FENCE_CYAN);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_SKY_BLUE = block(DbmModBlocks.BUILDING_BRICKS_FENCE_SKY_BLUE);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_DARK_GREEN = block(DbmModBlocks.BUILDING_BRICKS_FENCE_DARK_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_GREEN = block(DbmModBlocks.BUILDING_BRICKS_FENCE_GREEN);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_LIME = block(DbmModBlocks.BUILDING_BRICKS_FENCE_LIME);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_YELLOW = block(DbmModBlocks.BUILDING_BRICKS_FENCE_YELLOW);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_ORANGE = block(DbmModBlocks.BUILDING_BRICKS_FENCE_ORANGE);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_RED = block(DbmModBlocks.BUILDING_BRICKS_FENCE_RED);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_PURPLE = block(DbmModBlocks.BUILDING_BRICKS_FENCE_PURPLE);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_PINK = block(DbmModBlocks.BUILDING_BRICKS_FENCE_PINK);
	public static final RegistryObject<Item> BUILDING_STAIRS_INVERTED_BLACK = block(DbmModBlocks.BUILDING_STAIRS_INVERTED_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_STAIRS_INVERTED_BLACK = block(DbmModBlocks.BUILDING_BRICKS_STAIRS_INVERTED_BLACK);
	public static final RegistryObject<Item> BUILDING_FENCE_INVERTED_BLACK = block(DbmModBlocks.BUILDING_FENCE_INVERTED_BLACK);
	public static final RegistryObject<Item> BUILDING_BRICKS_FENCE_INVERTED_BLACK = block(DbmModBlocks.BUILDING_BRICKS_FENCE_INVERTED_BLACK);
	public static final RegistryObject<Item> UNBREAKABLE_SAND = block(DbmModBlocks.UNBREAKABLE_SAND);
	public static final RegistryObject<Item> UNBREAKABLE_STONE = block(DbmModBlocks.UNBREAKABLE_STONE);
	public static final RegistryObject<Item> INVISIBLE_LIGHT = block(DbmModBlocks.INVISIBLE_LIGHT);
	public static final RegistryObject<Item> UNBREAKABLE_GLASS = block(DbmModBlocks.UNBREAKABLE_GLASS);
	public static final RegistryObject<Item> UNBREAKABLE_LOG = block(DbmModBlocks.UNBREAKABLE_LOG);
	public static final RegistryObject<Item> UNBREAKABLE_PLANKS = block(DbmModBlocks.UNBREAKABLE_PLANKS);
	public static final RegistryObject<Item> POWER_POLE_PLINTH_DOWN = block(DbmModBlocks.POWER_POLE_PLINTH_DOWN);
	public static final RegistryObject<Item> POWER_POLE_PLINTH_UP = block(DbmModBlocks.POWER_POLE_PLINTH_UP);
	public static final RegistryObject<Item> BUILDING_BLOCK_TILES_2 = block(DbmModBlocks.BUILDING_BLOCK_TILES_2);
	public static final RegistryObject<Item> UNBREAKABLE_LEAVES = block(DbmModBlocks.UNBREAKABLE_LEAVES);
	public static final RegistryObject<Item> UNBREAKABLE_FULL_GRASS_BLOCK = block(DbmModBlocks.UNBREAKABLE_FULL_GRASS_BLOCK);
	public static final RegistryObject<Item> PUNCHING_BAG_ITEM = REGISTRY.register("punching_bag_item", () -> new PunchingBagItemItem());
	public static final RegistryObject<Item> KORIN_TOWER_BLOCK_1 = block(DbmModBlocks.KORIN_TOWER_BLOCK_1);
	public static final RegistryObject<Item> KORIN_TOWER_BLOCK_2 = block(DbmModBlocks.KORIN_TOWER_BLOCK_2);
	public static final RegistryObject<Item> HYPERBOLIC_TIME_CHAMBER_DOOR = block(DbmModBlocks.HYPERBOLIC_TIME_CHAMBER_DOOR);
	public static final RegistryObject<Item> TURTLE_GI_CHESTPLATE = REGISTRY.register("turtle_gi_chestplate", () -> new TurtleGiItem.Chestplate());
	public static final RegistryObject<Item> TURTLE_GI_LEGGINGS = REGISTRY.register("turtle_gi_leggings", () -> new TurtleGiItem.Leggings());
	public static final RegistryObject<Item> OLD_SCHOOL_TURTLE_GI_CHESTPLATE = REGISTRY.register("old_school_turtle_gi_chestplate", () -> new OldSchoolTurtleGiItem.Chestplate());
	public static final RegistryObject<Item> OLD_SCHOOL_TURTLE_GI_LEGGINGS = REGISTRY.register("old_school_turtle_gi_leggings", () -> new OldSchoolTurtleGiItem.Leggings());
	public static final RegistryObject<Item> PURPLE_GI_CHESTPLATE = REGISTRY.register("purple_gi_chestplate", () -> new PurpleGiItem.Chestplate());
	public static final RegistryObject<Item> PURPLE_GI_LEGGINGS = REGISTRY.register("purple_gi_leggings", () -> new PurpleGiItem.Leggings());
	public static final RegistryObject<Item> SABERTOOTH_SPAWN_EGG = REGISTRY.register("sabertooth_spawn_egg", () -> new ForgeSpawnEggItem(DbmModEntities.SABERTOOTH, -39424, -1, new Item.Properties()));
	public static final RegistryObject<Item> RAW_DINOSAUR = REGISTRY.register("raw_dinosaur", () -> new RawDinosaurItem());
	public static final RegistryObject<Item> COOKED_DINOSAUR = REGISTRY.register("cooked_dinosaur", () -> new CookedDinosaurItem());
	public static final RegistryObject<Item> BEAR_THIEF_SPAWN_EGG = REGISTRY.register("bear_thief_spawn_egg", () -> new ForgeSpawnEggItem(DbmModEntities.BEAR_THIEF, -2065900, -13434880, new Item.Properties()));
	public static final RegistryObject<Item> DINOSAUR_1_SPAWN_EGG = REGISTRY.register("dinosaur_1_spawn_egg", () -> new ForgeSpawnEggItem(DbmModEntities.DINOSAUR_1, -1733294, -4449, new Item.Properties()));

	// Start of user code block custom items
	// End of user code block custom items
	private static RegistryObject<Item> block(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()));
	}
}
